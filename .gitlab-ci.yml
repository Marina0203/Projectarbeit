# This file defines the GitLab CI/CD pipeline.
# For more information, please visit the GitLab CI/CD docs: https://docs.gitlab.com/ee/ci/README.html
variables:
    NODE_VERSION: "16.2"
    PHP_VERSION: "8.1"
    COMPOSER_VERSION: "2.4"
    PHP_DEPLOYER_VERSION: "7"

stages:
  - build
#  - test
  - deploy-dev
  - deploy-staging
  - deploy

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - vendor/
    - .npm/

build_assets:
  stage: build
  image: node:$NODE_VERSION
  when: always
  script:
    # "npm ci" is preferred in automated environments,
    # but only works when a package-lock.json exists!
    # - npm ci --cache .npm --prefer-offline
    - npm install --cache .npm --prefer-offline
    - npm run build:production
  artifacts:
    name: Site_Assets
    paths:
      - packages/sz_assets/Resources/Public
    expire_in: 1h
    untracked: true

package_install:
  stage: build
  image: composer:$COMPOSER_VERSION
  when: always
  script:
    # @todo: Once we have a TYPO3 recommended image containing composer and all requirements
    #        this should be replaced by a regular "composer install"
    - composer install --no-scripts --no-dev --no-progress --no-interaction --optimize-autoloader --ignore-platform-reqs
  artifacts:
    name: Packages
    paths:
      - $CI_PROJECT_DIR
    expire_in: 1h
    untracked: true

#phpstan:
#  stage: test
#  image: php:$PHP_VERSION-cli-alpine
#  when: always
#  needs:
#    - package_install
#  script:
#    - ./vendor/bin/phpstan analyse -c .phpstan.neon --no-progress

#php_cs_fixer:
#  stage: test
#  image: cytopia/php-cs-fixer:latest-php$PHP_VERSION
#  when: always
#  needs:
#    - package_install
#  script:
#    - php-cs-fixer fix --dry-run --diff

Deploy Develop:
  stage: deploy-dev
  image: minkbear/php-deployer:$PHP_DEPLOYER_VERSION
  variables:
    COMMIT_HASH: $CI_COMMIT_SHORT_SHA
    DEPLOYMENT_SERVER_HOST: $DEPLOYMENT_SERVER_HOST
    DEPLOYMENT_SERVER_PORT: $DEPLOYMENT_SERVER_PORT
    DEPLOYMENT_SERVER_REMOTE_USER: $DEPLOYMENT_SERVER_REMOTE_USER
    DEPLOYMENT_SERVER_DEPLOY_PATH: $DEPLOYMENT_SERVER_DEPLOY_PATH_DEV
    PHP_VERSION: $PHP_VERSION
  only:
    - /^develop.*$/
  script:
    - "ssh-add <(echo \"$SSH_PRIVATE_KEY\")"
    - ssh-deactivate-key-checking
    - dep deploy develop

Deploy Staging:
  stage: deploy-staging
  image: minkbear/php-deployer:$PHP_DEPLOYER_VERSION
  variables:
    COMMIT_HASH: $CI_COMMIT_SHORT_SHA
    DEPLOYMENT_SERVER_HOST: $DEPLOYMENT_SERVER_HOST
    DEPLOYMENT_SERVER_PORT: $DEPLOYMENT_SERVER_PORT
    DEPLOYMENT_SERVER_REMOTE_USER: $DEPLOYMENT_SERVER_REMOTE_USER
    DEPLOYMENT_SERVER_DEPLOY_PATH: $DEPLOYMENT_SERVER_DEPLOY_PATH_STAGE
    PHP_VERSION: $PHP_VERSION
  only:
    - /^release/.*$/
  script:
    - "ssh-add <(echo \"$SSH_PRIVATE_KEY\")"
    - ssh-deactivate-key-checking
    - dep deploy staging

Deploy:
  stage: deploy
  image: minkbear/php-deployer:$PHP_DEPLOYER_VERSION
  variables:
    COMMIT_HASH: $CI_COMMIT_SHORT_SHA
    DEPLOYMENT_SERVER_HOST: $DEPLOYMENT_SERVER_HOST
    DEPLOYMENT_SERVER_PORT: $DEPLOYMENT_SERVER_PORT
    DEPLOYMENT_SERVER_REMOTE_USER: $DEPLOYMENT_SERVER_REMOTE_USER
    DEPLOYMENT_SERVER_DEPLOY_PATH: $DEPLOYMENT_SERVER_DEPLOY_PATH_PRODUCTION
    PHP_VERSION: $PHP_VERSION
  only:
    - master
  script:
    - "ssh-add <(echo \"$SSH_PRIVATE_KEY\")"
    - ssh-deactivate-key-checking
    - dep deploy production
